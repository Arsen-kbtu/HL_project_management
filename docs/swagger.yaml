definitions:
  model.Project:
    properties:
      description:
        type: string
      endDate:
        example: "2024-09-20T15:04:05Z"
        type: string
      id:
        readOnly: true
        type: integer
      managerId:
        example: 1
        type: integer
      startDate:
        readOnly: true
        type: string
      title:
        type: string
    required:
    - managerId
    - title
    type: object
  model.Task:
    properties:
      assigneeId:
        example: 1
        type: integer
      completedAt:
        example: "2024-09-20T15:04:05Z"
        type: string
      createdAt:
        readOnly: true
        type: string
      description:
        type: string
      id:
        readOnly: true
        type: integer
      priority:
        enum:
        - low
        - medium
        - high
        type: string
      projectId:
        example: 1
        type: integer
      status:
        type: string
      title:
        type: string
    required:
    - assigneeId
    - priority
    - projectId
    - title
    type: object
  model.User:
    properties:
      email:
        example: string@gmail.com
        type: string
      id:
        readOnly: true
        type: integer
      name:
        type: string
      registrationAt:
        readOnly: true
        type: string
      role:
        type: string
    required:
    - email
    - name
    - role
    type: object
info:
  contact: {}
paths:
  /health:
    get:
      description: Health check
      produces:
      - text/plain
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /projects:
    get:
      description: Get all projects
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all projects
      tags:
      - projects
    post:
      consumes:
      - application/json
      description: Create a new project
      parameters:
      - description: Project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new project
      tags:
      - projects
  /projects/{id}:
    delete:
      description: Delete project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
      summary: Delete project
      tags:
      - projects
    get:
      description: Get project by ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
      summary: Get project by ID
      tags:
      - projects
    put:
      consumes:
      - application/json
      description: Update project
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project data
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/model.Project'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Project not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update project
      tags:
      - projects
  /projects/{id}/tasks:
    get:
      description: Get tasks by project ID
      parameters:
      - description: Project ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Tasks not found
          schema:
            type: string
      summary: Get tasks by project ID
      tags:
      - projects
  /search/projects:
    get:
      description: Search projects by title or manager
      parameters:
      - description: Project title
        in: query
        name: title
        type: string
      - description: Manager ID
        in: query
        name: manager
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Search projects
      tags:
      - projects
  /search/tasks:
    get:
      description: Search tasks by title, priority, status, assignee, or project
      parameters:
      - description: Task title
        in: query
        name: title
        type: string
      - description: Task priority
        in: query
        name: priority
        type: string
      - description: Task status
        in: query
        name: status
        type: string
      - description: Assignee ID
        in: query
        name: assignee
        type: integer
      - description: Project ID
        in: query
        name: project
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Search tasks
      tags:
      - tasks
  /search/users:
    get:
      description: Search users by name or email
      parameters:
      - description: User name
        in: query
        name: name
        type: string
      - description: User email
        in: query
        name: email
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "400":
          description: Invalid input
          schema:
            type: string
      summary: Search users by name or email
      tags:
      - users
  /tasks:
    get:
      description: Get all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all tasks
      tags:
      - tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new task
      tags:
      - tasks
  /tasks/{id}:
    delete:
      description: Delete task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Delete task
      tags:
      - tasks
    get:
      description: Get task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
      summary: Get task by ID
      tags:
      - tasks
    put:
      consumes:
      - application/json
      description: Update task
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task data
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/model.Task'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Task'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: Task not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update task
      tags:
      - tasks
  /users:
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid input
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      description: Delete user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted successfully
          schema:
            type: string
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Delete user
      tags:
      - users
    get:
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
      summary: Get user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: Invalid input
          schema:
            type: string
        "404":
          description: User not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update user
      tags:
      - users
  /users/{id}/tasks:
    get:
      description: Get tasks by user ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Task'
            type: array
        "400":
          description: Invalid ID
          schema:
            type: string
        "404":
          description: Tasks not found
          schema:
            type: string
      summary: Get tasks by user ID
      tags:
      - users
swagger: "2.0"
